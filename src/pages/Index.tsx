import { useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { AIInsightsPanel } from "@/components/dashboard/AIInsightsPanel";
import { AccountSelection } from "@/components/dashboard/AccountSelection";
import { CompetitorAnalysis } from "@/components/dashboard/CompetitorAnalysis";
import { OptimizationScore } from "@/components/dashboard/OptimizationScore";
import { OptimizationHeatmap } from "@/components/dashboard/OptimizationHeatmap";
import { NextBestActions } from "@/components/dashboard/NextBestActions";
import { CompetitorWatchlist } from "@/components/dashboard/CompetitorWatchlist";
import { AdminPanel } from "@/components/admin/AdminPanel";
import { BarChart3, TrendingUp, DollarSign, Target, RefreshCw, Settings, Link, LogOut, Crown } from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import { useAuth } from "@/contexts/AuthContext";
import { SubscriptionManager } from '@/components/subscription/SubscriptionManager';
import { OnboardingTour } from '@/components/onboarding/OnboardingTour';
import { useOnboarding } from '@/hooks/useOnboarding';

const Index = () => {
  const { toast } = useToast();
  const { user, signOut, loading, subscription, isAdmin } = useAuth();
  const { isOnboardingOpen, loading: onboardingLoading, completeOnboarding, skipOnboarding } = useOnboarding();
  const navigate = useNavigate();

  // Redirect to auth if not authenticated
  useEffect(() => {
    if (!loading && !user) {
      navigate('/auth');
    }
  }, [user, loading, navigate]);

  const handleSignOut = async () => {
    await signOut();
    toast({
      title: "Signed out",
      description: "You have been successfully signed out.",
    });
    navigate('/auth');
  };

  // Show loading while checking auth or onboarding
  if (loading || onboardingLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto mb-4"></div>
          <p>Loading...</p>
        </div>
      </div>
    );
  }

  // Don't render dashboard if user not authenticated
  if (!user) {
    return null;
  }

  const handleDeepAudit = () => {
    toast({
      title: "Deep Audit Started",
      description: "Running comprehensive campaign analysis...",
      duration: 3000,
    });
    
    // Switch to AI Insights tab where the analysis happens
    setTimeout(() => {
      const aiInsightsTab = document.querySelector('[value="ai-insights"]') as HTMLElement;
      if (aiInsightsTab) {
        aiInsightsTab.click();
      }
    }, 1000);
  };

  const handleGenerateReport = () => {
    // Generate a comprehensive dashboard report
    const reportData = {
      generatedAt: new Date().toLocaleString(),
      dashboardSummary: {
        connectedServices: 3,
        activeFeatures: 3,
        lastUpdated: new Date().toLocaleString()
      },
      quickStats: {
        optimizationScore: "Calculating...",
        activeMonitoring: "Live",
        aiInsights: "Active"
      }
    };

    const reportContent = `
REVV MARKETING DASHBOARD REPORT
===============================

Generated: ${reportData.generatedAt}

DASHBOARD OVERVIEW
==================
‚Ä¢ Connected Services: ${reportData.dashboardSummary.connectedServices}
‚Ä¢ Active Features: ${reportData.dashboardSummary.activeFeatures}
‚Ä¢ Last Updated: ${reportData.dashboardSummary.lastUpdated}

CONNECTED SERVICES
==================
‚úÖ Google Ads API - Connected
‚úÖ OpenAI API - Connected  
‚úÖ GoHighLevel - Connected

ACTIVE SAAS FEATURES
====================
‚úÖ Auto Optimization - Active
‚úÖ AI Insights - Active
‚úÖ Competitor Analysis - Active

QUICK STATS
===========
‚Ä¢ Optimization Score: ${reportData.quickStats.optimizationScore}
‚Ä¢ Monitoring Status: ${reportData.quickStats.activeMonitoring}
‚Ä¢ AI Insights: ${reportData.quickStats.aiInsights}

RECOMMENDATIONS
===============
‚Ä¢ Run competitor analysis for detailed insights
‚Ä¢ Configure account-specific optimization rules
‚Ä¢ Set up automated reporting schedules
‚Ä¢ Review campaign performance metrics

---
Report generated by REVV Marketing Dashboard
    `.trim();

    // Create and download the file
    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `revv-dashboard-report-${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);

    toast({
      title: "Report Generated",
      description: "Dashboard report downloaded successfully",
      duration: 3000,
    });
  };

  const handleROISimulator = () => {
    // Create a simple ROI calculation interface
    const monthlySpend = prompt("Enter your current monthly ad spend ($):");
    if (!monthlySpend || isNaN(Number(monthlySpend))) {
      toast({
        title: "Invalid Input",
        description: "Please enter a valid number for monthly spend",
        variant: "destructive",
        duration: 3000,
      });
      return;
    }

    const currentCTR = prompt("Enter your current CTR (%):");
    if (!currentCTR || isNaN(Number(currentCTR))) {
      toast({
        title: "Invalid Input", 
        description: "Please enter a valid number for CTR",
        variant: "destructive",
        duration: 3000,
      });
      return;
    }

    const spend = Number(monthlySpend);
    const ctr = Number(currentCTR);
    
    // Calculate potential improvements with optimization
    const improvedCTR = ctr * 1.25; // 25% improvement
    const costSavings = spend * 0.15; // 15% cost reduction
    const revenueIncrease = spend * 1.4; // 40% revenue increase
    
    const simulationResults = `
ROI SIMULATION RESULTS
======================

Current Situation:
‚Ä¢ Monthly Spend: $${spend.toLocaleString()}
‚Ä¢ Current CTR: ${ctr}%

With REVV Optimization:
‚Ä¢ Improved CTR: ${improvedCTR.toFixed(2)}% (+25%)
‚Ä¢ Monthly Cost Savings: $${costSavings.toLocaleString()}
‚Ä¢ Projected Revenue Increase: $${revenueIncrease.toLocaleString()}
‚Ä¢ Annual ROI Improvement: $${(revenueIncrease * 12).toLocaleString()}

Key Benefits:
‚úÖ Automated bid optimization
‚úÖ AI-powered keyword insights  
‚úÖ Real-time competitor monitoring
‚úÖ Performance-based recommendations

---
Simulation by REVV Marketing ROI Calculator
    `.trim();

    // Download simulation results
    const blob = new Blob([simulationResults], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `roi-simulation-${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);

    toast({
      title: "ROI Simulation Complete",
      description: `Potential annual ROI improvement: $${(revenueIncrease * 12).toLocaleString()}`,
      duration: 5000,
    });
  };

  return (
    <div className="min-h-screen bg-background">
      {/* Header */}
      <header className="bg-primary text-primary-foreground shadow-lg">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <div className="bg-primary-foreground text-primary rounded-lg p-2 font-bold text-lg">
                AI
              </div>
              <div>
                <h1 className="text-xl font-bold">Ads Accelerator</h1>
                <p className="text-sm opacity-90">Google Ads Optimization Dashboard</p>
              </div>
            </div>
            <div className="flex items-center space-x-4">
              <Badge variant="secondary">
                {user?.email}
              </Badge>
              <Button 
                variant="outline" 
                size="sm" 
                onClick={handleSignOut}
                className="text-primary-foreground border-primary-foreground hover:bg-primary-foreground hover:text-primary"
              >
                <LogOut className="h-4 w-4 mr-2" />
                Sign Out
              </Button>
            </div>
          </div>
        </div>
      </header>
      
      <div className="container mx-auto px-6 py-8 space-y-8">

        {/* Main Dashboard */}
        <Tabs defaultValue="overview" className="space-y-6">
        <TabsList className={`grid w-full ${isAdmin ? 'grid-cols-7' : 'grid-cols-6'}`}>
          <TabsTrigger value="overview">Overview</TabsTrigger>
          <TabsTrigger value="subscription">üí≥ Subscription</TabsTrigger>
          <TabsTrigger value="accounts">üè¢ Accounts</TabsTrigger>
          <TabsTrigger value="campaigns">üéØ Competitor Analysis</TabsTrigger>
          <TabsTrigger value="ai-insights">üß† AI Insights</TabsTrigger>
          <TabsTrigger value="api-setup">‚öôÔ∏è API Setup</TabsTrigger>
          {isAdmin && <TabsTrigger value="admin">üëë Admin</TabsTrigger>}
        </TabsList>

          <TabsContent value="overview" className="space-y-6">
            {/* Pro-Level Command Center Layout */}
            <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
              {/* Left Column - Main Metrics & Heatmap */}
              <div className="lg:col-span-2 space-y-6">
                {/* Optimization Score - Featured */}
                <OptimizationScore />
                
                {/* Opportunity Heatmap */}
                <OptimizationHeatmap />
              </div>
              
              {/* Right Column - Action Items & Watchlist */}
              <div className="space-y-6">
                {/* Next Best Actions */}
                <NextBestActions />
                
                {/* Competitor Watchlist */}
                <CompetitorWatchlist />
              </div>
            </div>
            
            {/* Bottom Row - Connected Services */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Link className="h-5 w-5" />
                    Connected Services
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    <div className="flex items-center justify-between">
                      <span className="text-sm">Google Ads API</span>
                      <Badge className="bg-green-500 text-white">Connected</Badge>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-sm">OpenAI API</span>
                      <Badge className="bg-green-500 text-white">Connected</Badge>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-sm">GoHighLevel</span>
                      <Badge className="bg-green-500 text-white">Connected</Badge>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Settings className="h-5 w-5" />
                    SaaS Features
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    <div className="flex items-center justify-between">
                      <span className="text-sm">Auto Optimization</span>
                      <Badge className="bg-blue-500 text-white">Active</Badge>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-sm">AI Insights</span>
                      <Badge className="bg-blue-500 text-white">Active</Badge>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-sm">Competitor Analysis</span>
                      <Badge className="bg-blue-500 text-white">Active</Badge>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <TrendingUp className="h-5 w-5" />
                    Quick Actions
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-2">
                    <Button className="w-full" size="sm" onClick={handleDeepAudit}>
                      Run Deep Audit
                    </Button>
                    <Button className="w-full" variant="outline" size="sm" onClick={handleGenerateReport}>
                      Generate Report
                    </Button>
                    <Button className="w-full" variant="outline" size="sm" onClick={handleROISimulator}>
                      ROI Simulator
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>

          <TabsContent value="subscription" className="space-y-6">
            <SubscriptionManager />
          </TabsContent>

          <TabsContent value="accounts" className="space-y-6">
            <AccountSelection />
          </TabsContent>

          <TabsContent value="campaigns" className="space-y-6">
            <CompetitorAnalysis />
          </TabsContent>

          <TabsContent value="ai-insights" className="space-y-6">
            <AIInsightsPanel />
          </TabsContent>

          <TabsContent value="api-setup" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>üîë Google Ads API Connection Status</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="p-4 bg-success/10 border border-success/20 rounded-lg">
                    <h4 className="font-semibold text-success mb-2">‚úÖ API Successfully Connected!</h4>
                    <div className="space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span>Developer Token:</span>
                        <span className="font-mono">DwIxmnLQLA2T8TyaNnQMcg</span>
                      </div>
                      <div className="flex justify-between">
                        <span>OAuth Status:</span>
                        <span className="text-success">‚úÖ Authorized</span>
                      </div>
                      <div className="flex justify-between">
                        <span>Refresh Token:</span>
                        <span className="text-success">‚úÖ Active</span>
                      </div>
                      <div className="flex justify-between">
                        <span>OpenAI API:</span>
                        <span className="text-success">‚úÖ Connected</span>
                      </div>
                    </div>
                  </div>
                  
                  <div className="space-y-3">
                    <h4 className="font-semibold">SaaS Configuration:</h4>
                    <div className="space-y-2">
                      <Button className="w-full justify-start">
                        üí≥ Configure Stripe Billing
                      </Button>
                      <Button variant="outline" className="w-full justify-start">
                        ‚öôÔ∏è Set Account Pricing Rules
                      </Button>
                      <Button variant="outline" className="w-full justify-start">
                        üìä Setup Usage Analytics
                      </Button>
                      <Button variant="outline" className="w-full justify-start">
                        üîê Configure User Authentication
                      </Button>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
        </TabsContent>
        
        {isAdmin && (
          <TabsContent value="admin">
            <AdminPanel />
          </TabsContent>
        )}
      </Tabs>
      </div>
      
      {/* Onboarding Tour */}
      <OnboardingTour 
        isOpen={isOnboardingOpen}
        onComplete={completeOnboarding}
        onSkip={skipOnboarding}
      />
    </div>
  );
};

export default Index;