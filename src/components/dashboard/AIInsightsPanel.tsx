import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Brain, Code, TrendingUp, AlertTriangle, CheckCircle } from "lucide-react";

export const AIInsightsPanel = () => {
  const recommendations = [
    {
      id: 1,
      type: 'optimization',
      priority: 'high',
      title: 'Increase Bid for High-Performing Keywords',
      description: 'Keywords "digital marketing" and "SEO services" are performing 40% above average CTR.',
      impact: '+25% estimated conversion increase',
      confidence: 92
    },
    {
      id: 2,
      type: 'budget',
      priority: 'medium',
      title: 'Reallocate Budget to Mobile Campaigns',
      description: 'Mobile campaigns showing 60% higher conversion rates than desktop.',
      impact: '+15% estimated ROI improvement',
      confidence: 87
    },
    {
      id: 3,
      type: 'keywords',
      priority: 'low',
      title: 'Add Negative Keywords',
      description: 'Found 12 low-relevance terms generating clicks without conversions.',
      impact: '-8% estimated cost reduction',
      confidence: 95
    }
  ];

  const generatedCode = `
# Automated Google Ads Optimization Script
# Generated by REVV AI Assistant

from google.ads.googleads.client import GoogleAdsClient
from google.ads.googleads.errors import GoogleAdsException

def optimize_campaign_bids(client, customer_id, campaign_id):
    """
    Optimize keyword bids based on performance data
    """
    keyword_service = client.get_service("KeywordViewService")
    
    # Query high-performing keywords
    query = '''
        SELECT 
            campaign.id,
            ad_group.id,
            ad_group_criterion.keyword.text,
            metrics.ctr,
            metrics.conversions
        FROM keyword_view 
        WHERE campaign.id = {campaign_id}
        AND metrics.ctr > 0.03
        ORDER BY metrics.conversions DESC
    '''
    
    response = keyword_service.search_stream(
        customer_id=customer_id, 
        query=query.format(campaign_id=campaign_id)
    )
    
    for batch in response:
        for row in batch.results:
            # Increase bid for high-performing keywords
            if row.metrics.ctr > 0.05:
                update_keyword_bid(client, customer_id, 
                                 row.ad_group_criterion.resource_name, 
                                 increase_factor=1.2)
  `;

  const getPriorityVariant = (priority: string) => {
    switch (priority) {
      case 'high': return 'destructive';
      case 'medium': return 'default';
      case 'low': return 'secondary';
      default: return 'secondary';
    }
  };

  const getPriorityIcon = (priority: string) => {
    switch (priority) {
      case 'high': return <AlertTriangle className="h-4 w-4" />;
      case 'medium': return <TrendingUp className="h-4 w-4" />;
      case 'low': return <CheckCircle className="h-4 w-4" />;
      default: return <CheckCircle className="h-4 w-4" />;
    }
  };

  return (
    <Card className="h-full">
      <CardHeader>
        <CardTitle className="flex items-center space-x-2">
          <Brain className="h-5 w-5 text-accent" />
          <span>AI Insights & Automation</span>
        </CardTitle>
      </CardHeader>
      <CardContent>
        <Tabs defaultValue="recommendations" className="space-y-4">
          <TabsList className="grid w-full grid-cols-3">
            <TabsTrigger value="recommendations">AI Recommendations</TabsTrigger>
            <TabsTrigger value="code">AI Generated Code</TabsTrigger>
            <TabsTrigger value="metrics">Google Ad Metrics</TabsTrigger>
          </TabsList>
          
          <TabsContent value="recommendations" className="space-y-4">
            {recommendations.map((rec) => (
              <div key={rec.id} className="p-4 border rounded-lg space-y-3">
                <div className="flex items-start justify-between">
                  <div className="flex items-center space-x-2">
                    {getPriorityIcon(rec.priority)}
                    <h4 className="font-semibold">{rec.title}</h4>
                  </div>
                  <Badge variant={getPriorityVariant(rec.priority)}>
                    {rec.priority}
                  </Badge>
                </div>
                
                <p className="text-sm text-muted-foreground">{rec.description}</p>
                
                <div className="flex items-center justify-between">
                  <div className="space-y-1">
                    <p className="text-sm font-medium text-success">{rec.impact}</p>
                    <p className="text-xs text-muted-foreground">
                      {rec.confidence}% confidence
                    </p>
                  </div>
                  <div className="space-x-2">
                    <Button variant="outline" size="sm">Review</Button>
                    <Button size="sm">Apply</Button>
                  </div>
                </div>
              </div>
            ))}
          </TabsContent>
          
          <TabsContent value="code" className="space-y-4">
            <div className="space-y-3">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-2">
                  <Code className="h-4 w-4 text-accent" />
                  <h4 className="font-semibold">Auto-Generated Optimization Script</h4>
                </div>
                <Badge variant="outline">Python</Badge>
              </div>
              
              <div className="bg-muted p-4 rounded-lg">
                <pre className="text-xs overflow-x-auto">
                  <code>{generatedCode}</code>
                </pre>
              </div>
              
              <div className="flex space-x-2">
                <Button variant="outline" size="sm">Download Script</Button>
                <Button variant="outline" size="sm">View Full Code</Button>
                <Button size="sm">Deploy to Production</Button>
              </div>
            </div>
          </TabsContent>
          
          <TabsContent value="metrics" className="space-y-4">
            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <p className="text-sm text-muted-foreground">Campaign Performance</p>
                <div className="space-y-1">
                  <div className="flex justify-between">
                    <span className="text-sm">Total Impressions</span>
                    <span className="font-semibold">2.4M</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm">Total Clicks</span>
                    <span className="font-semibold">48K</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm">Average CTR</span>
                    <span className="font-semibold">2.1%</span>
                  </div>
                </div>
              </div>
              
              <div className="space-y-2">
                <p className="text-sm text-muted-foreground">Cost Metrics</p>
                <div className="space-y-1">
                  <div className="flex justify-between">
                    <span className="text-sm">Total Spend</span>
                    <span className="font-semibold">$12,450</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm">Average CPC</span>
                    <span className="font-semibold">$0.26</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm">Cost/Conversion</span>
                    <span className="font-semibold">$15.30</span>
                  </div>
                </div>
              </div>
            </div>
          </TabsContent>
        </Tabs>
      </CardContent>
    </Card>
  );
};